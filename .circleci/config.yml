# iOS CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/ios-migrating-from-1-2/ for more details
#
version: 2
jobs:
  build:
    macos:
      xcode: "10.2.0"
    working_directory: ~/sample_project
    environment:
      FL_OUTPUT_DIR: output

    steps:
      - checkout
      - restore_cache:
          keys:
            - gem-cache-v1-{{ arch }}-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
      - run: bundle install --path vendor/bundle
      - save_cache:
          key: gem-cache-v1-{{ arch }}-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - run:
          name: build
          command: bundle exec fastlane build
      - persist_to_workspace:
          root: .
          paths:
            - .

  upload_deploygate:
    macos:
      xcode: "10.2.0"
    working_directory: ~/sample_project
    environment:
      FL_OUTPUT_DIR: output
      IPA_FILE: output/gym/ci-sample.ipa
    
    steps:
      - attach_workspace:
          at: .
      - run:
          name: upload to deploygate
          command: bundle exec fastlane upload_deploygate

  build_and_upload:
    macos:
      xcode: "10.2.0"
    working_directory: ~/sample_project
    environment:
      FL_OUTPUT_DIR: output
      IPA_FILE: output/gym/ci-sample.ipa

    steps:
      - checkout
      - restore_cache:
          keys:
            - gem-cache-v1-{{ arch }}-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
      - run: bundle install --path vendor/bundle
      - save_cache:
          key: gem-cache-v1-{{ arch }}-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - run:
          name: build
          command: bundle exec fastlane build
      - run:
          name: upload to deploygate
          command: bundle exec fastlane upload_deploygate
      - run:
          name: copy ipa file
          command: cp $IPA_FILE ~/
      - store_artifacts:
          path: ~/ci-sample.ipa
          destination: debug-ipa-file

  test:
    macos:
      xcode: "10.2.0"
    working_directory: ~/sample_project
    environment:
      FL_OUTPUT_DIR: output

    steps:
      - checkout
      - restore_cache:
          keys:
            - gem-cache-v1-{{ arch }}-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
      - run: bundle install --path vendor/bundle
      - save_cache:
          key: gem-cache-v1-{{ arch }}-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - run:
          name: run test
          command: bundle exec fastlane test

      - store_test_results:
          path: output/scan
      - store_artifacts:
          path: output/
          destination: test-report
      - store_artifacts:
          path: ~/Library/Logs/scan
          destination: scan-logs

  update_metadata:
    macos:
      xcode: "10.2.0"
    working_directory: ~/sample_project

    steps:
      - checkout
      - restore_cache:
          keys:
            - gem-cache-v1-{{ arch }}-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
      - run: bundle install --path vendor/bundle
      - save_cache:
          key: gem-cache-v1-{{ arch }}-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - run:
          name: update metadata
          command: bundle exec fastlane update_metadata


  release:
    macos:
      xcode: "10.2.0"
    working_directory: ~/sample_project
    environment:
      FL_OUTPUT_DIR: output
      IPA_FILE: output/gym/ci-sample.ipa

    steps:
      - checkout
      - restore_cache:
          keys:
            - gem-cache-v1-{{ arch }}-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
      - run: bundle install --path vendor/bundle
      - save_cache:
          key: gem-cache-v1-{{ arch }}-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - run:
          name: build
          command: bundle exec fastlane release_build
      - run:
          name: copy ipa file
          command: cp $IPA_FILE ~/
      - store_artifacts:
          path: ~/ci-sample.ipa
          destination: release-ipa-file
      - run:
          name: release
          command: bundle exec fastlane release


workflows:
  version: 2
  sample:
    jobs:
      - build:
          filters:
            branches:
              only: /sample\/.*/
      - upload_deploygate:
          requires:
            - build
  feature:
    jobs:
      - test:
          filters:
            branches:
              only: /support\/.*/
      - build_and_upload:
          requires:
            - test
  release:
    jobs:
      - test:
          filters:
            branches:
              only: /release*/
      - update_metadata:
          requires:
            - test
      - release_build:
          requires:
            - update_metadata
